<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>View Category</title>
  <link rel="stylesheet" href="/css/viewcategory.css" />
  <link rel="stylesheet" href="/css/navSide.css" />
  <style>
    .page-item.disabled .page-link {
  pointer-events: none;
 
  opacity: 0.5;
}
nav ul{
  margin-left: -250px;
}
  </style>
</head>
<body>
  <%- include("adminNav.ejs") %>
  <div class="container-fluid px-0">
    <div class="row g-0 high">
      <div class="col-2 p-0">
        <%- include("aside.ejs") %>
      </div>
      <div class="col-10">
        <div class="addStd ml-5">
          <div class="mt-3 mx-5"><h2>view Category</h2></div>
          <div class="mt-4 mb-3 ms-5 w-100 m-5 ">
            <input type="text" id="categorySearch" class="form-control w-50" placeholder="Search Category" />
          </div>

          <!-- Table -->
          <table class="table table-striped table-bordered mt-4 w-75 m-5 table-dark text-warning">
            <thead>
              <tr>
                <th scope="col">Sr. No</th>
                <th scope="col">Name</th>
                <th scope="col">Delete</th>
                <th scope="col">Update</th>
              </tr>
            </thead>
            <tbody id="tbody">
              <% if (cat.length == 0) { %>
                <tr><td colspan="4">No data available</td></tr>
              <% } else {
                cat.forEach((item, index) => { %>
                  <tr class="category-row">
                    <td><%= index + 1 %></td>
                    <td class="cat-name"><%= item.name %></td>
                    <td>
                      <button class="UD_Btn UD_del">
                        <a href="/deletecategory?id=<%= item.id %>">Delete</a>
                      </button>
                    </td>
                    <td>
                      <button class="UD_Btn UD_upd">
                        <a href="/updatecategory?id=<%= item.id %>">Update</a>
                      </button>
                    </td>
                  </tr>
              <% }) } %>
            </tbody>
          </table>

         <nav>
           <ul id="pagination" class="pagination justify-content-center my-3"></ul>
        </nav>



 <script>
  document.addEventListener('DOMContentLoaded', () => {
    const rowsPerPage = 5;
    let currentPage = 1;

    const rows = document.querySelectorAll('.category-row');
    const searchInput = document.getElementById("categorySearch");
    const tbody = document.getElementById("tbody");

    let filteredRows = Array.from(rows);

    function displayRows(page) {
      const start = (page - 1) * rowsPerPage;
      const end = page * rowsPerPage;


      rows.forEach(row => row.style.display = 'none');


      const noDataRow = document.getElementById('no-data-row');
      if (noDataRow) noDataRow.remove();

      if (filteredRows.length === 0) {
        const tr = document.createElement('tr');
        tr.id = 'no-data-row';
        tr.innerHTML = `<td colspan="4" class="text-center text-danger">No matching categories found.</td>`;
        tbody.appendChild(tr);
        return;
      }

      filteredRows.forEach((row, index) => {
        row.style.display = index >= start && index < end ? '' : 'none';
      });
    }

    function updatePagination() {
      const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
      const pagination = document.getElementById('pagination');
      pagination.innerHTML = '';

      if (totalPages <= 1) return;

      const createPageItem = (text, page, active = false, disabled = false) => {
        const li = document.createElement('li');
        li.className = `page-item ${active ? 'active' : ''} ${disabled ? 'disabled' : ''}`;
        const a = document.createElement('a');
        a.className = 'page-link';
        a.href = '#';
        a.innerText = text;
        a.addEventListener('click', (e) => {
          e.preventDefault();
          if (!disabled) {
            currentPage = page;
            displayRows(currentPage);
            updatePagination();
          }
        });
        li.appendChild(a);
        return li;
      };

      pagination.appendChild(createPageItem('«', currentPage - 1, false, currentPage === 1));

      for (let i = 1; i <= totalPages; i++) {
        pagination.appendChild(createPageItem(i, i, currentPage === i));
      }

      pagination.appendChild(createPageItem('»', currentPage + 1, false, currentPage === totalPages));
    }

    // 🔍 Search by name
    searchInput.addEventListener('input', () => {
      const query = searchInput.value.toLowerCase().trim();
      filteredRows = Array.from(rows).filter(row => {
        const nameCell = row.querySelector('.cat-name');
        return nameCell && nameCell.innerText.toLowerCase().includes(query);
      });
      currentPage = 1;
      displayRows(currentPage);
      updatePagination();
    });

    displayRows(currentPage);
    updatePagination();
  });
</script>


</body>
</html>
